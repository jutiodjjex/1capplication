
&НаСервере
Процедура ВыгрузитьНаСервере(ИмяПути, ДокументНачальныхОстатков)
	
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	
	
	МассивДублированнойНоменклатурыДокумент = Новый Массив;
	МассивУникальнойНоменклатурыДокумент    = Новый Массив;
	
	Для Каждого Строка Из ОбъектДокументВводОстатков.Товары Цикл
		Если МассивУникальнойНоменклатурыДокумент.Найти(Строка.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			МассивУникальнойНоменклатурыДокумент.Добавить(Строка.Номенклатура.УникальныйИдентификатор());
		Иначе
			МассивДублированнойНоменклатурыДокумент.Добавить(Строка.Номенклатура.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	СчетчикСтрок             = 0;
	СчетчикСтрокExcel        = 0;
	СчетчикОбработанныхСтрок = 0;
	СчетчикСозданныхСтрок    = 0;           
	КоличествоСтрок          = 0;
	
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		КоличествоСтрок = КоличествоСтрок + 1;
	КонецЦикла;
	
	МассивСтруктурОстатковНоменклатурыДокумент  = Новый Массив; //Структура "Гуид" и "Количество" 
	МассивСтруктурОстатковНоменклатурыЭксель    = Новый Массив; //Структура "Гуид" и "Количество4101" и "КоличествоГТД"
	МассивСтруктурБезошибочнойНоменклатуры      = Новый Массив; //Массив структур содержит структуру "Гуид" и "ВидСчета" (Строка, вид счета, по которому совпали остатки: 4101 или ГТД), остатки которой безошибочно совпадают
	МассивСтруктурОпаснойНоменклатуры           = Новый Массив; 
	//Поиск остатка номенклатуры по каждой позиции в документе
	МассивОбработанныхДублей                    = Новый Массив;
	МассивОбработанныхСтрокДокумент             = Новый Массив;
	МассивОбработанныхСтрокЭксель               = Новый Массив;
	
	//Корректная номенклатура - если нет дублей в ТЧ документа
	//Опасная номенклатура - если есть дубли в ТЧ, обработка для коррекции возможных ошибок
	
	//Обработка заполнения массива остатков ТЧ документа по уникальным позициям номенклатуры для сравнения с выгрузкой
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		Если МассивОбработанныхСтрокДокумент.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			Если МассивДублированнойНоменклатурыДокумент.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
				//Кейс для обработки корректной номенклатуры
				МассивСтруктурОстатковНоменклатурыДокумент.Добавить(Новый Структура("Гуид, Количество, КоличествоДублей",
				Строка(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()), СтрокаТЧ.КоличествоУпаковок, 1));
			Иначе
				//Кейс для обработки опасной номенклатуры
				Если МассивОбработанныхДублей.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
					ОстатокДублированнойНоменклатуры = 0;
					ГуидДублированнойНоменклатуры = null;
					КоличествоПриходовДок = 0;
					//Поиск и суммирование остатков всех дублей опасной номенклатуры
					Для Каждого СтрокаТЧДубль Из ОбъектДокументВводОстатков.Товары Цикл
						Если СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор() = СтрокаТЧ.Номенклатура.УникальныйИдентификатор() Тогда
							ГуидДублированнойНоменклатуры = СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор();
							ОстатокДублированнойНоменклатуры = ОстатокДублированнойНоменклатуры + СтрокаТЧДубль.КоличествоУпаковок;
							КоличествоПриходовДок = КоличествоПриходовДок + 1;
						КонецЕсли;
					КонецЦикла;
					МассивСтруктурОстатковНоменклатурыДокумент.Добавить(Новый Структура("Гуид, Количество, КоличествоДублей",
					Строка(ГуидДублированнойНоменклатуры), Число(ОстатокДублированнойНоменклатуры), КоличествоПриходовДок));
					МассивОбработанныхДублей.Добавить(СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор());
				КонецЕсли;
			КонецЕсли;
			МассивОбработанныхСтрокДокумент.Добавить(СтрокаТЧ.Номенклатура.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	//Обработка заполнения массива остатков выгрузки по уникальным позициям номенклатуры для сравнения с ТЧ документа
	Для Каждого СтрокаЭксель Из ТаблицаЗначенийИзБП Цикл
		Если МассивОбработанныхСтрокЭксель.Найти(СтрЗаменить(СтрокаЭксель.Гуид, """", "")) = Неопределено Тогда
			ОстатокДублированнойНоменклатуры4101 = 0;
			ОстатокДублированнойНоменклатурыГТД  = 0;
			КоличествоПриходовГТД                = 0;
			ГуидДублированнойНоменклатуры = null;
			Для Каждого СтрокаЭксельДубль Из ТаблицаЗначенийИзБП Цикл
				Если СтрЗаменить(СтрокаЭксель.Гуид, """", "") = СтрЗаменить(СтрокаЭксельДубль.Гуид, """", "") Тогда
					ОстатокДублированнойНоменклатуры4101 = СтрокаЭксельДубль.Остаток4101;
					ОстатокДублированнойНоменклатурыГТД = Число(ОстатокДублированнойНоменклатурыГТД) +
					?(СтрокаЭксельДубль.ОстатокГТД = "", 0, СтрокаЭксельДубль.ОстатокГТД);
					КоличествоПриходовГТД = КоличествоПриходовГТД + 1;
					ГуидДублированнойНоменклатуры = СтрЗаменить(СтрокаЭксельДубль.Гуид, """", "");
				КонецЕсли;
			КонецЦикла;
			МассивСтруктурОстатковНоменклатурыЭксель.Добавить(Новый Структура("Гуид, Количество4101, КоличествоГТД, КоличествоПриходовГТД",
			ГуидДублированнойНоменклатуры, Число(ОстатокДублированнойНоменклатуры4101), Число(ОстатокДублированнойНоменклатурыГТД), КоличествоПриходовГТД));
			МассивОбработанныхСтрокЭксель.Добавить(СтрЗаменить(СтрокаЭксель.Гуид, """", ""));
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтруктураОстатковЭксель Из МассивСтруктурОстатковНоменклатурыЭксель Цикл
		Для Каждого СтруктураОстатковДокумент Из МассивСтруктурОстатковНоменклатурыДокумент Цикл
			Если СтруктураОстатковЭксель.Гуид = СтруктураОстатковДокумент.Гуид Тогда
				Если СтруктураОстатковЭксель.Количество4101 = СтруктураОстатковДокумент.Количество И
					СтруктураОстатковДокумент.КоличествоДублей < 2 Тогда
					МассивСтруктурБезошибочнойНоменклатуры.Добавить(Новый Структура("Гуид, ВидОстатков, ОстатокДокумент, Остаток4101, ОстатокГТД, КоличествоПриходовГТД, КоличествоДублейДок",
					Строка(СтруктураОстатковЭксель.Гуид), "4101", Число(СтруктураОстатковДокумент.Количество), Число(СтруктураОстатковЭксель.Количество4101),
					СтруктураОстатковЭксель.КоличествоГТД, СтруктураОстатковЭксель.КоличествоПриходовГТД, СтруктураОстатковДокумент.КоличествоДублей));
				ИначеЕсли СтруктураОстатковЭксель.КоличествоГТД = СтруктураОстатковДокумент.Количество И
					СтруктураОстатковДокумент.КоличествоДублей < 2 Тогда
					МассивСтруктурБезошибочнойНоменклатуры.Добавить(Новый Структура("Гуид, ВидОстатков, ОстатокДокумент, Остаток4101, ОстатокГТД, КоличествоПриходовГТД, КоличествоДублейДок",
					Строка(СтруктураОстатковЭксель.Гуид), "ГТД", Число(СтруктураОстатковДокумент.Количество), Число(СтруктураОстатковЭксель.Количество4101),
					СтруктураОстатковЭксель.КоличествоГТД, СтруктураОстатковЭксель.КоличествоПриходовГТД, СтруктураОстатковДокумент.КоличествоДублей));
				ИначеЕсли СтруктураОстатковДокумент.КоличествоДублей > 1 Тогда
					МассивСтруктурОпаснойНоменклатуры.Добавить(Новый Структура("Гуид, ОстатокДокумент, Остаток4101, ОстатокГТД, КоличествоПриходовГТД, КоличествоДублейДок, КоличествоОбработок",
					Строка(СтруктураОстатковЭксель.Гуид), СтруктураОстатковДокумент.Количество, Число(СтруктураОстатковЭксель.Количество4101),
					СтруктураОстатковЭксель.КоличествоГТД, СтруктураОстатковЭксель.КоличествоПриходовГТД, СтруктураОстатковДокумент.КоличествоДублей, 0));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МассивКорректнойНоменклатуры = Новый Массив;
	Для Каждого СтрокаНом Из МассивСтруктурБезошибочнойНоменклатуры Цикл
	МассивКорректнойНоменклатуры.Добавить(Строка(СтрокаНом.Гуид));	
	КонецЦикла;

	МассивОпаснойНоменклатуры = Новый Массив;
	Для Каждого СтрокаНом Из МассивСтруктурОпаснойНоменклатуры Цикл
	МассивОпаснойНоменклатуры.Добавить(Строка(СтрокаНом.Гуид));	
	КонецЦикла;

	МассивОбработаннойОпаснойНоменклатуры = Новый Массив;
		
	МассивЗаполненныеГуидыСовпадает = Новый Массив;

	Для Счетчик = 0 По КоличествоСтрок - 1 Цикл
		Если МассивКорректнойНоменклатуры.Найти(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор())) <> Неопределено ИЛИ МассивОпаснойНоменклатуры.Найти(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор())) <> Неопределено Тогда
			Для Каждого СтрокаExcel Из ТаблицаЗначенийИзБП Цикл
				//Для дублированной номенклатуры
				Если МассивДублированнойНоменклатурыДокумент.Найти(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
					Если Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) = СтрЗаменить(СтрокаExcel.Гуид, """", "") Тогда
						Если МассивЗаполненныеГуидыСовпадает.Найти(СтрЗаменить(СтрокаExcel.Гуид, """", "")) = Неопределено Тогда
							//Кейс, если номенклатура встречается впервые
							Для Каждого СтатусСовпаденияОстатка Из МассивСтруктурБезошибочнойНоменклатуры Цикл
								Если МассивЗаполненныеГуидыСовпадает.Найти(СтрЗаменить(СтрокаExcel.Гуид, """", "")) = Неопределено Тогда
									Если Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) = СтатусСовпаденияОстатка.Гуид Тогда
										Если СтатусСовпаденияОстатка.ВидОстатков = "ГТД" Тогда 
											Если Число(СтатусСовпаденияОстатка.КоличествоПриходовГТД) < 2 Тогда
												//6 к. Нет дублей в документе, количество ГТД совпадает с количеством документа, 41.01 не совпадает совсем, один ГТД
												ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаExcel.НомерГТД));
												ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(СтатусСовпаденияОстатка.ОстатокГТД);
												МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
											Иначе
												//5 к. Нет дублей в документе, количество ГТД совпадает с количеством документа, 41.01 не совпадает совсем, много ГТД
												МассивПарсингГТД = Новый Массив;
												Для Каждого ПриходГТД Из ТаблицаЗначенийИзБП Цикл
													Если СтрЗаменить(ПриходГТД.Гуид, """", "") = Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) Тогда
														МассивПодстрокГТД = Новый Массив;
														МнСтр = СтрЗаменить(ПриходГТД.НомерГТД, "/", Символы.ПС);
														Для СчетчикРазделенныхСтрок = 1 По СтрЧислоСтрок(МнСтр) Цикл
															МассивПодстрокГТД.Добавить(СтрПолучитьСтроку(МнСтр, СчетчикРазделенныхСтрок));
														КонецЦикла;
														День  = Лев(МассивПодстрокГТД[1], 2);
														Месяц = Сред(МассивПодстрокГТД[1], 3, 2);
														Год   = Прав(МассивПодстрокГТД[1], 2);
														МассивПарсингГТД.Добавить(Новый Структура("ДеньПрихода, МесяцПрихода, ГодПрихода, КоличествоГТД, НомерГТД",
														День, Месяц, Год, ПриходГТД.ОстатокГТД, ПриходГТД.НомерГТД));
													КонецЕсли;
													
													//Если СтрЗаменить(ПриходГТД.Гуид, """", "") = Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) Тогда
													//	МассивПодстрокГТД = Новый Массив;
													//	МнСтр = СтрЗаменить(ПриходГТД.НомерГТД, "/", Символы.ПС);
													//	Для СчетчикРазделенныхСтрок = 1 По СтрЧислоСтрок(МнСтр) Цикл
													//		МассивПодстрокГТД.Добавить(СтрПолучитьСтроку(МнСтр, СчетчикРазделенныхСтрок));
													//	КонецЦикла;
													//	День  = Лев(МассивПодстрокГТД[1], 2);
													//	Месяц = Сред(МассивПодстрокГТД[1], 3, 2);
													//	Год   = Прав(МассивПодстрокГТД[1], 2);
													//	МассивПарсингГТД.Добавить(Новый Структура("ДеньПрихода, МесяцПрихода, ГодПрихода, КоличествоГТД, НомерГТД",
													//	День, Месяц, Год, ПриходГТД.ОстатокГТД, ПриходГТД.НомерГТД));
													//КонецЕсли;
													
												КонецЦикла;
												ТаблицаЗначенийДляСортировки = Новый ТаблицаЗначений;
												ТаблицаЗначенийДляСортировки.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
												ТаблицаЗначенийДляСортировки.Колонки.Добавить("КоличествоГТД", Новый ОписаниеТипов("Число"));
												ТаблицаЗначенийДляСортировки.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("Строка"));
												Для Каждого СортируемыйЭлемент Из МассивПарсингГТД Цикл
													НоваяСтрокаТЗ = ТаблицаЗначенийДляСортировки.Добавить();
													Если Строка(СортируемыйЭлемент.ДеньПрихода) = "00" ИЛИ Строка(СортируемыйЭлемент.МесяцПрихода) = "00" Тогда
														Прервать;
													Иначе
														Если Число("20" + Строка(СортируемыйЭлемент.ГодПрихода)) <= Число(Год(ТекущаяДата())) Тогда 
															НоваяСтрокаТЗ.Дата = Дата("20" + Строка(СортируемыйЭлемент.ГодПрихода),
															?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода)),
															?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01", Строка(СортируемыйЭлемент.ДеньПрихода)));
														Иначе
															НоваяСтрокаТЗ.Дата = Дата(?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01", Строка(СортируемыйЭлемент.ДеньПрихода)),
															?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода)),
															"20" + Строка(СортируемыйЭлемент.ГодПрихода));
														КонецЕсли;
													КонецЕсли;
													НоваяСтрокаТЗ.НомерГТД      = СортируемыйЭлемент.НомерГТД;
													НоваяСтрокаТЗ.КоличествоГТД = Число(СтатусСовпаденияОстатка.ОстатокГТД) / МассивПарсингГТД.Количество(); //ПО LIFO
												КонецЦикла;
												ТаблицаЗначенийДляСортировки.Сортировать("Дата УБЫВ");
												ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[0].НомерГТД));
												ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[0].КоличествоГТД); //ПО LIFO 
												КоличествоДляСозданияСтрокТЧ = ТаблицаЗначенийДляСортировки.Количество();
												Для СчетчикСоздания = 1 По КоличествоДляСозданияСтрокТЧ - 1 Цикл
													НоваяСтрокаТЧ = ОбъектДокументВводОстатков.Товары.Добавить();
													ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ОбъектДокументВводОстатков.Товары[Счетчик]);
													НоваяСтрокаТЧ.КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[СчетчикСоздания].КоличествоГТД);
													НоваяСтрокаТЧ.НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[СчетчикСоздания].НомерГТД));		
												КонецЦикла;
												МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
											КонецЕсли
										ИначеЕсли СтатусСовпаденияОстатка.ВидОстатков = "4101" Тогда
											Если СтатусСовпаденияОстатка.ОстатокДокумент = СтатусСовпаденияОстатка.Остаток4101 И
												СтатусСовпаденияОстатка.ОстатокДокумент = СтатусСовпаденияОстатка.ОстатокГТД Тогда 
												Если Число(СтатусСовпаденияОстатка.КоличествоПриходовГТД) < 2 Тогда
													//2 к. Нет дублей в документе, количество ГТД и 41.01 совпадает между собой и с количеством документа, один ГТД
													ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаExcel.НомерГТД));
													ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(СтрокаExcel.Остаток4101);
													МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
												Иначе
													//1 к. Нет дублей в документе, количество ГТД и 41.01 совпадает между собой и с количеством документа, много ГТД
													МассивПарсингГТД = Новый Массив;
													Для Каждого ПриходГТД Из ТаблицаЗначенийИзБП Цикл
														Если СтрЗаменить(ПриходГТД.Гуид, """", "") = Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) Тогда
															МассивПодстрокГТД = Новый Массив;
															МнСтр = СтрЗаменить(ПриходГТД.НомерГТД, "/", Символы.ПС);
															Для СчетчикРазделенныхСтрок = 1 По СтрЧислоСтрок(МнСтр) Цикл
																МассивПодстрокГТД.Добавить(СтрПолучитьСтроку(МнСтр, СчетчикРазделенныхСтрок));
															КонецЦикла;
															День  = Лев(МассивПодстрокГТД[1], 2);
															Месяц = Сред(МассивПодстрокГТД[1], 3, 2);
															Год   = Прав(МассивПодстрокГТД[1], 2);
															МассивПарсингГТД.Добавить(Новый Структура("ДеньПрихода, МесяцПрихода, ГодПрихода, КоличествоГТД, НомерГТД",
															День, Месяц, Год, ПриходГТД.ОстатокГТД, ПриходГТД.НомерГТД));
														КонецЕсли;
													КонецЦикла;
													ТаблицаЗначенийДляСортировки = Новый ТаблицаЗначений;
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("КоличествоГТД", Новый ОписаниеТипов("Число"));
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("Строка"));
													Для Каждого СортируемыйЭлемент Из МассивПарсингГТД Цикл
														НоваяСтрокаТЗ = ТаблицаЗначенийДляСортировки.Добавить();
														Если Строка(СортируемыйЭлемент.ДеньПрихода) = "00" ИЛИ Строка(СортируемыйЭлемент.МесяцПрихода) = "00" Тогда
															Прервать;
														Иначе
															Если Число("20" + Строка(СортируемыйЭлемент.ГодПрихода)) <= Число(Год(ТекущаяДата())) Тогда 
																НоваяСтрокаТЗ.Дата = Дата("20" + Строка(СортируемыйЭлемент.ГодПрихода),
																?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода)),
																?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01", Строка(СортируемыйЭлемент.ДеньПрихода)));
															Иначе
																НоваяСтрокаТЗ.Дата = Дата(?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01",
																Строка(СортируемыйЭлемент.ДеньПрихода)), ?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01",
																Строка(СортируемыйЭлемент.МесяцПрихода)), "20" + Строка(СортируемыйЭлемент.ГодПрихода));
															КонецЕсли;
														КонецЕсли;
														НоваяСтрокаТЗ.НомерГТД = СортируемыйЭлемент.НомерГТД;
														НоваяСтрокаТЗ.КоличествоГТД = СортируемыйЭлемент.КоличествоГТД;
													КонецЦикла;
													ТаблицаЗначенийДляСортировки.Сортировать("Дата УБЫВ");
													ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[0].НомерГТД));
													ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[0].КоличествоГТД);
													КоличествоДляСозданияСтрокТЧ = ТаблицаЗначенийДляСортировки.Количество();
													Для СчетчикСоздания = 1 По КоличествоДляСозданияСтрокТЧ - 1 Цикл
														НоваяСтрокаТЧ = ОбъектДокументВводОстатков.Товары.Добавить();
														ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ОбъектДокументВводОстатков.Товары[Счетчик]);
														НоваяСтрокаТЧ.КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[СчетчикСоздания].КоличествоГТД);
														НоваяСтрокаТЧ.НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[СчетчикСоздания].НомерГТД));		
													КонецЦикла;
													МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
												КонецЕсли
											Иначе    
												Если Число(СтатусСовпаденияОстатка.КоличествоПриходовГТД) < 2 Тогда
													//8 к. Нет дублей в документе, количество 41.01 совпадает с количеством документа, ГТД не совпадает совсем, один ГТД
													ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаExcel.НомерГТД));
													ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(СтрокаExcel.Остаток4101);
													МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
												Иначе
													//7 к. Нет дублей в документе, количество 41.01 совпадает с количеством документа, ГТД не совпадает совсем, много ГТД
													МассивПарсингГТД = Новый Массив;
													Для Каждого ПриходГТД Из ТаблицаЗначенийИзБП Цикл
														Если СтрЗаменить(ПриходГТД.Гуид, """", "") = Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) Тогда
															МассивПодстрокГТД = Новый Массив;
															МнСтр = СтрЗаменить(ПриходГТД.НомерГТД, "/", Символы.ПС);
															Для СчетчикРазделенныхСтрок = 1 По СтрЧислоСтрок(МнСтр) Цикл
																МассивПодстрокГТД.Добавить(СтрПолучитьСтроку(МнСтр, СчетчикРазделенныхСтрок));
															КонецЦикла;
															День  = Лев(МассивПодстрокГТД[1], 2);
															Месяц = Сред(МассивПодстрокГТД[1], 3, 2);
															Год   = Прав(МассивПодстрокГТД[1], 2);
															МассивПарсингГТД.Добавить(Новый Структура("ДеньПрихода, МесяцПрихода, ГодПрихода, КоличествоГТД, НомерГТД",
															День, Месяц, Год, ПриходГТД.ОстатокГТД, ПриходГТД.НомерГТД));
														КонецЕсли;
													КонецЦикла;
													ТаблицаЗначенийДляСортировки = Новый ТаблицаЗначений;
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("КоличествоГТД", Новый ОписаниеТипов("Число"));
													ТаблицаЗначенийДляСортировки.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("Строка"));
													Для Каждого СортируемыйЭлемент Из МассивПарсингГТД Цикл
														НоваяСтрокаТЗ = ТаблицаЗначенийДляСортировки.Добавить();
														Если Строка(СортируемыйЭлемент.ДеньПрихода) = "00" ИЛИ Строка(СортируемыйЭлемент.МесяцПрихода) = "00" Тогда
															Прервать;
														Иначе
															Если Число("20" + Строка(СортируемыйЭлемент.ГодПрихода)) <= Число(Год(ТекущаяДата())) Тогда 
																НоваяСтрокаТЗ.Дата = Дата("20" + Строка(СортируемыйЭлемент.ГодПрихода),
																?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода))
																, ?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01", Строка(СортируемыйЭлемент.ДеньПрихода)));
															Иначе
																НоваяСтрокаТЗ.Дата = Дата(?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01",
																Строка(СортируемыйЭлемент.ДеньПрихода)),
																?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода)),
																"20" + Строка(СортируемыйЭлемент.ГодПрихода));
															КонецЕсли;
														КонецЕсли;
														НоваяСтрокаТЗ.НомерГТД      = СортируемыйЭлемент.НомерГТД;
														НоваяСтрокаТЗ.КоличествоГТД = Число(СтрокаExcel.Остаток4101) / МассивПарсингГТД.Количество(); //ПО LIFO
													КонецЦикла;
													ТаблицаЗначенийДляСортировки.Сортировать("Дата УБЫВ");
													ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[0].НомерГТД));
													ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[0].КоличествоГТД); //ПО LIFO 
													КоличествоДляСозданияСтрокТЧ = ТаблицаЗначенийДляСортировки.Количество();
													Для СчетчикСоздания = 1 По КоличествоДляСозданияСтрокТЧ - 1 Цикл
														НоваяСтрокаТЧ = ОбъектДокументВводОстатков.Товары.Добавить();
														ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ОбъектДокументВводОстатков.Товары[Счетчик]);
														НоваяСтрокаТЧ.КоличествоУпаковок = Число(ТаблицаЗначенийДляСортировки[СчетчикСоздания].КоличествоГТД);
														НоваяСтрокаТЧ.НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(ТаблицаЗначенийДляСортировки[СчетчикСоздания].НомерГТД));		
													КонецЦикла;
													МассивЗаполненныеГуидыСовпадает.Добавить(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()));
												КонецЕсли
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						Иначе
							//Кейс, если номенклатура встречается не впервые
							Если ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаExcel.НомерГТД)) Тогда
								СообщениеОбОшибкеНом = Новый СообщениеПользователю;
								СообщениеОбОшибкеНом.Текст = "Номенклатура " + ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.Наименование 
								+ ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.Код + " не обработана. Найден непредвиденный дубль."; 
								СообщениеОбОшибкеНом.Сообщить();
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Для Каждого ОпаснаяНоменклатура Из МассивСтруктурОпаснойНоменклатуры Цикл
						Если МассивОбработаннойОпаснойНоменклатуры.Найти(Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор())) = Неопределено Тогда
							Если Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) = СтрЗаменить(СтрокаExcel.Гуид, """", "") И Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) = ОпаснаяНоменклатура.Гуид  Тогда
								Обработка = Истина;
								Если ОпаснаяНоменклатура.КоличествоОбработок = ОпаснаяНоменклатура Тогда
									Обработка = Ложь;	
								КонецЕсли;
								Если Обработка Тогда
									МассивПарсингГТД = Новый Массив;
									Для Каждого ПриходГТД Из ТаблицаЗначенийИзБП Цикл
										Если СтрЗаменить(ПриходГТД.Гуид, """", "") = Строка(ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.УникальныйИдентификатор()) Тогда
											МассивПодстрокГТД = Новый Массив;
											МнСтр = СтрЗаменить(ПриходГТД.НомерГТД, "/", Символы.ПС);
											Для СчетчикРазделенныхСтрок = 1 По СтрЧислоСтрок(МнСтр) Цикл
												МассивПодстрокГТД.Добавить(СтрПолучитьСтроку(МнСтр, СчетчикРазделенныхСтрок));
											КонецЦикла;
											День = Лев(МассивПодстрокГТД[1], 2);
											Месяц = Сред(МассивПодстрокГТД[1], 3, 2);
											Год = Прав(МассивПодстрокГТД[1], 2);
											МассивПарсингГТД.Добавить(Новый Структура("ДеньПрихода, МесяцПрихода, ГодПрихода, КоличествоГТД, НомерГТД", День, Месяц, Год, ПриходГТД.ОстатокГТД, ПриходГТД.НомерГТД));
										КонецЕсли;
									КонецЦикла;
									ТаблицаЗначенийДляСортировки = Новый ТаблицаЗначений;
									ТаблицаЗначенийДляСортировки.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
									ТаблицаЗначенийДляСортировки.Колонки.Добавить("КоличествоГТД", Новый ОписаниеТипов("Число"));
									ТаблицаЗначенийДляСортировки.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("Строка"));
									Для Каждого СортируемыйЭлемент Из МассивПарсингГТД Цикл
										НоваяСтрокаТЗ = ТаблицаЗначенийДляСортировки.Добавить();
										Если Строка(СортируемыйЭлемент.ДеньПрихода) = "00" ИЛИ Строка(СортируемыйЭлемент.МесяцПрихода) = "00" Тогда
											Прервать;
										Иначе
											Если Число("20" + Строка(СортируемыйЭлемент.ГодПрихода)) <= Число(Год(ТекущаяДата())) Тогда 
												НоваяСтрокаТЗ.Дата = Дата("20" + Строка(СортируемыйЭлемент.ГодПрихода),
												?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01", Строка(СортируемыйЭлемент.МесяцПрихода)),
												?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01", Строка(СортируемыйЭлемент.ДеньПрихода)));
											Иначе
												НоваяСтрокаТЗ.Дата = Дата(?(Строка(СортируемыйЭлемент.ДеньПрихода) = "00", "01",
												Строка(СортируемыйЭлемент.ДеньПрихода)),
												?(Строка(СортируемыйЭлемент.МесяцПрихода) = "00", "01",
												Строка(СортируемыйЭлемент.МесяцПрихода)),
												"20" + Строка(СортируемыйЭлемент.ГодПрихода));
											КонецЕсли;
										КонецЕсли;
										НоваяСтрокаТЗ.НомерГТД = СортируемыйЭлемент.НомерГТД;
										НоваяСтрокаТЗ.КоличествоГТД = СортируемыйЭлемент.КоличествоГТД;
									КонецЦикла;
									ТаблицаЗначенийДляСортировки.Сортировать("Дата УБЫВ");
									Для Каждого СтрокаТЗ Из ТаблицаЗначенийДляСортировки Цикл
										Если СтрокаТЗ.КоличествоГТД = ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок Тогда
											ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаТЗ.НомерГТД));
											ОпаснаяНоменклатура.КоличествоОбработок = ОпаснаяНоменклатура.КоличествоОбработок + 1;
											Прервать;
										Иначе												
											ТаблицаЗначенийСуммированная = Новый ТаблицаЗначений;
											ТаблицаЗначенийСуммированная.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
											ТаблицаЗначенийСуммированная.Колонки.Добавить("КоличествоГТД", Новый ОписаниеТипов("Число"));
											ТаблицаЗначенийСуммированная.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("Строка"));
											Для Каждого СтрокаТЗСумма Из ТаблицаЗначенийДляСортировки Цикл
												НоваяСтрока = ТаблицаЗначенийСуммированная.Добавить();
												НоваяСтрока.Дата = СтрокаТЗСумма.Дата;
												НоваяСтрока.НомерГТД = СтрокаТЗСумма.НомерГТД;
												НоваяСтрока.КоличествоГТД = 0;
												Для Каждого СтрокаТЗЦиклСуммирования Из ТаблицаЗначенийДляСортировки Цикл
													Если СтрокаТЗЦиклСуммирования.НомерГТД = НоваяСтрока.НомерГТД Тогда
														НоваяСтрока.КоличествоГТД = НоваяСтрока.КоличествоГТД + СтрокаТЗЦиклСуммирования.КоличествоГТД;		
													КонецЕсли;
												КонецЦикла;
											КонецЦикла;
											Для Каждого СтрокаТЗСуммированная Из ТаблицаЗначенийСуммированная Цикл
												Если СтрокаТЗСуммированная.КоличествоГТД = ОбъектДокументВводОстатков.Товары[Счетчик].КоличествоУпаковок Тогда
													ОбъектДокументВводОстатков.Товары[Счетчик].НомерГТД = Справочники.НомераГТД.НайтиПоКоду(СокрЛП(СтрокаТЗСуммированная.НомерГТД)); 
													ОпаснаяНоменклатура.КоличествоОбработок = ОпаснаяНоменклатура.КоличествоОбработок + 1;
													Прервать;
												КонецЕсли;
											КонецЦикла;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		Иначе
			СообщениеОбОшибкеНом = Новый СообщениеПользователю;
			СообщениеОбОшибкеНом.Текст = "Номенклатура " + ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.Наименование 
			+ ОбъектДокументВводОстатков.Товары[Счетчик].Номенклатура.Код + " не обработана. Остаток не совпадает или такая номенклатура не выгружена."; 
			СообщениеОбОшибкеНом.Сообщить();
		КонецЕсли;
	КонецЦикла;
	ОбъектДокументВводОстатков.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСправочникГТДСтраны(ИмяПути)
	
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	
	//ТЕСТ ЗАПОЛНЕНИЯ СТРАН ГТД В СПРАВОЧНИКЕ БЕКАП
	/////////////////////////////////////////////////////////////////////////
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НомераГТД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НомераГТД КАК НомераГТД
	|ГДЕ
	|	НЕ НомераГТД.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭлементСправочникаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаExcel Из ТаблицаЗначенийИзБП Цикл
			Если СтрЗаменить(ЭлементСправочникаОбъект.Код, " ", "") = СтрЗаменить(СтрокаExcel.НомерГТД, " ", "") Тогда
				ЭлементСправочникаОбъект.СтранаПроисхождения = Справочники.СтраныМира.НайтиПоНаименованию(СтрокаExcel.СтранаГТД);  
				ЭлементСправочникаОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрезатьНомераГТД()
	ОбрезатьПробелыНаНомерахГТДВУТ();	
КонецПроцедуры

//ОБРЕЗАНИЕ ПРОБЕЛОВ С НОМЕРОВ ГТД
/////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ОбрезатьПробелыНаНомерахГТДВУТ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НомераГТД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НомераГТД КАК НомераГТД
	|ГДЕ
	|	НЕ НомераГТД.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭлементСправочникаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЭлементСправочникаОбъект.Код = СокрЛП(ЭлементСправочникаОбъект.Код);
		ЭлементСправочникаОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрезатьПробелыСНомеровГТД()
	ОбрезатьПробелыНаНомерахГТДВУТ();
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	ВыгрузитьНаСервере(ИмяПути, ДокументНачальныхОстатков);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСправочник(Команда)
	ЗаполнитьСправочникГТДСтраны(ИмяПути);
КонецПроцедуры

Функция ВыгрузитьExcelВТаблицуЗначений(Файл)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(Файл, СпособЧтенияЗначенийТабличногоДокумента.Значение);
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область());
	ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПЗ.ЗаполнитьНастройки();
	ПЗ.Выполнить();
	ТаблицаЗначений = ПЗ.Результат.Выгрузить();
	
	Возврат ТаблицаЗначений;
КонецФункции

&НаКлиенте
Процедура ИмяПутиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(Режим);
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог";
	Если НЕ ДиалогВыбораКаталога.Выбрать() Тогда
		Сообщить("Каталог НЕ ВЫБРАН",СтатусСообщения.Внимание);
	Иначе    
		ЭтаФорма.ИмяПути = ДиалогВыбораКаталога.ПолноеИмяФайла;
	КонецЕсли    
КонецПроцедуры


//ПРОВЕРКИ
/////////////////////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ПроверитьСовпадениеНаСервере(ИмяПути)
	
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	МассивНайденнойНоменклатуры = Новый Массив;
	
	ЗапросГуидов = Новый Запрос;
	ЗапросГуидов.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Код КАК Код
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ПометкаУдаления
	|	И НЕ Номенклатура.ЭтоГруппа";
	РезультатГуидов = ЗапросГуидов.Выполнить();
	ВыборкаГуидов = РезультатГуидов.Выбрать();
	
	Пока ВыборкаГуидов.Следующий() Цикл
		Для Каждого СтрокаExcel Из ТаблицаЗначенийИзБП Цикл
			Если Строка(ВыборкаГуидов.Ссылка.УникальныйИдентификатор()) = СтрЗаменить(СтрокаExcel.Гуид, """", "") Тогда
				МассивНайденнойНоменклатуры.Добавить(ВыборкаГуидов.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КоличествоПозицийЭксель = ТаблицаЗначенийИзБП.Количество();
	КоличествоСовпавшихПозицийЭксель = МассивНайденнойНоменклатуры.Количество();
	
	
	СообщениеОРезультате = Новый СообщениеПользователю;
	Если ТаблицаЗначенийИзБП.Количество() = МассивНайденнойНоменклатуры.Количество() Тогда
		СообщениеОРезультате.Текст = "Результат сравнения успешный. Все позиции совпали.";
		СтатусСравнения = "Успешно";
	Иначе
		СообщениеОРезультате.Текст = "Не все позиции совпали. Возможны ошибки.";СтатусСравнения = "Успешно";
		СтатусСравнения = "Возможны ошибки";
	КонецЕсли;
	СообщениеОРезультате.Сообщить();
	
	СообщениеОСовпаденииГуида = Новый СообщениеПользователю;
	СообщениеОСовпаденииГуида.Текст = "Количество позиций (с дублями) в файле .xls: " + ТаблицаЗначенийИзБП.Количество();
	СообщениеОСовпаденииГуида.Сообщить();
	СообщениеОСовпаденииГуида.Текст = "Совпало " + МассивНайденнойНоменклатуры.Количество() + " гуидов из файла .xls с данными из УТ.";
	СообщениеОСовпаденииГуида.Сообщить();
	
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьСовпадение(Команда)
	ПроверитьСовпадениеНаСервере(ИмяПути);
КонецПроцедуры


&НаСервере
Процедура ПроверитьОстатки41НаСервере()
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	КоличествоОстатков4101 = 0;
	КоличествоОстатковДокумент = 0;
	
	Для Каждого СтрокаExcel Из ТаблицаЗначенийИзБП Цикл
		КоличествоОстатков4101 = КоличествоОстатков4101 + СтрокаExcel.Остаток4101;
	КонецЦикла;
	
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		КоличествоОстатковДокумент = КоличествоОстатковДокумент + СтрокаТЧ.КоличествоУпаковок;
	КонецЦикла;
	
	СуммаОстатковНоменклатурыИзДокументаВводаОстатков = КоличествоОстатковДокумент;	
	ОстаткиНаСчету41ИзБП = КоличествоОстатков4101;
	
	СообщениеОСравнении = Новый СообщениеПользователю;
	СообщениеОСравнении.Текст = "Количество остатков счета 41.01 из .xls: " + ОстаткиНаСчету41ИзБП + ", количество остатков документа: " + СуммаОстатковНоменклатурыИзДокументаВводаОстатков;
	СообщениеОСравнении.Сообщить();
	Если СуммаОстатковНоменклатурыИзДокументаВводаОстатков = ОстаткиНаСчету41ИзБП Тогда
		СообщениеОСравнении.Текст = "Успешно. Остатки совпадают.";
		СтатусСравненияОстатков4101 = "Успешно. Остатки совпадают.";
	Иначе
		СообщениеОСравнении.Текст = "Остатки не совпадают. Возможны ошибки.";
		СтатусСравненияОстатков4101 = "Остатки не совпадают. Возможны ошибки.";
	КонецЕсли;
	СообщениеОСравнении.Сообщить();	
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьОстатки41(Команда)
	ПроверитьОстатки41НаСервере();
КонецПроцедуры


&НаСервере
Процедура ПроверитьОстаткиГТДНаСервере()
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	КоличествоОстатковГТД = 0;
	КоличествоОстатковДокумент = 0;
	
	Для Каждого СтрокаExcel Из ТаблицаЗначенийИзБП Цикл
		КоличествоОстатковГТД = КоличествоОстатковГТД + СтрокаExcel.ОстатокГТД;
	КонецЦикла;
	
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		КоличествоОстатковДокумент = КоличествоОстатковДокумент + СтрокаТЧ.КоличествоУпаковок;
	КонецЦикла;
	
	СуммаОстатковНоменклатурыИзДокументаВводаОстатков = КоличествоОстатковДокумент;	
	ОстаткиНаСчетуГТДИзБП = КоличествоОстатковГТД;
	
	СообщениеОСравнении = Новый СообщениеПользователю;
	СообщениеОСравнении.Текст = "Количество остатков счета ГТД из .xls: " + ОстаткиНаСчету41ИзБП + ", количество остатков документа: " + СуммаОстатковНоменклатурыИзДокументаВводаОстатков;
	СообщениеОСравнении.Сообщить();
	Если СуммаОстатковНоменклатурыИзДокументаВводаОстатков = ОстаткиНаСчетуГТДИзБП Тогда
		СообщениеОСравнении.Текст = "Успешно. Остатки совпадают.";
		СтатусСравненияОстатковГТД = "Успешно. Остатки совпадают.";
	Иначе
		СообщениеОСравнении.Текст = "Остатки не совпадают. Возможны ошибки.";
		СтатусСравненияОстатковГТД = "Остатки не совпадают. Возможны ошибки.";
	КонецЕсли;
	СообщениеОСравнении.Сообщить();
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьОстаткиГТД(Команда)
	ПроверитьОстаткиГТДНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПроверитьУникальностьНоменклатурыНаСервере()
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	
	МассивУникальнойНоменклатурыExcel = Новый Массив;
	МассивУникальнойНоменклатурыДокумент = Новый Массив;
	
	СообщениеОбОшибке = Новый СообщениеПользователю;
	ТекстОбОшибке = "";
	
	Для Каждого Строка Из ТаблицаЗначенийИзБП Цикл
		Если МассивУникальнойНоменклатурыExcel.Найти(СтрЗаменить(Строка.Гуид, """", "")) = Неопределено Тогда
			МассивУникальнойНоменклатурыExcel.Добавить(СтрЗаменить(Строка.Гуид, """", ""));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ОбъектДокументВводОстатков.Товары Цикл
		Если МассивУникальнойНоменклатурыДокумент.Найти(Строка.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			МассивУникальнойНоменклатурыДокумент.Добавить(Строка.Номенклатура.УникальныйИдентификатор());
		Иначе
			ТекстОбОшибке = ТекстОбОшибке + Символы.ПС + "ОШИБКА. Найден дубль в документе. Номенклатура: " + Строка.Номенклатура.Наименование + " " + Строка.Номенклатура.Код;
		КонецЕсли;
	КонецЦикла;
	
	СообщениеОбОшибке.Текст = ТекстОбОшибке;
	СообщениеОбОшибке.Сообщить();
	
	КоличествоРазличнойНоменклатурыВЭксель = МассивУникальнойНоменклатурыExcel.Количество();
	КоличествоПозицийНоменклатурыВДокументе = МассивУникальнойНоменклатурыДокумент.Количество();
	
	Если МассивУникальнойНоменклатурыExcel.Количество() = МассивУникальнойНоменклатурыДокумент.Количество() Тогда
		СтатусСравненияПозиций = "Успешно. Количество позиций совпадает.";	
	Иначе
		СтатусСравненияПозиций = "Количество позиций не совпадает. Возможны ошибки.";
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьУникальностьНоменклатуры(Команда)
	ПроверитьУникальностьНоменклатурыНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПроверитьСхождениеОстатковНаСервере()
	ТаблицаЗначенийИзБП = ВыгрузитьExcelВТаблицуЗначений(ИмяПути);
	
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	
	
	МассивДублированнойНоменклатурыДокумент = Новый Массив;
	МассивУникальнойНоменклатурыДокумент    = Новый Массив;
	
	Для Каждого Строка Из ОбъектДокументВводОстатков.Товары Цикл
		Если МассивУникальнойНоменклатурыДокумент.Найти(Строка.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			МассивУникальнойНоменклатурыДокумент.Добавить(Строка.Номенклатура.УникальныйИдентификатор());
		Иначе
			МассивДублированнойНоменклатурыДокумент.Добавить(Строка.Номенклатура.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
	СчетчикСтрок = 0;
	СчетчикСтрокExcel = 0;
	СчетчикОбработанныхСтрок = 0;
	СчетчикСозданныхСтрок = 0;           
	
	КоличествоСтрок = 0;
	
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		КоличествоСтрок = КоличествоСтрок + 1;
	КонецЦикла;
	
	МассивСтруктурОстатковНоменклатурыДокумент  = Новый Массив; //Структура "Гуид" и "Количество" 
	МассивСтруктурОстатковНоменклатурыЭксель    = Новый Массив; //Структура "Гуид" и "Количество4101" и "КоличествоГТД"
	МассивСтруктурОстатковНоменклатурыСравнение = Новый Массив; //Суммирующий массив, структура "ГуидДокумент" и "КоличествоДокумент" и "КоличествоЭксель4101" и "КоличествоЭксельГТД"
	МассивСтруктурБезошибочнойНоменклатуры      = Новый Массив; //Массив структур содержит структуру "Гуид" и "ВидСчета" (Строка, вид счета, по которому совпали остатки: 4101 или ГТД), остатки которой безошибочно совпадают
	
	//Поиск остатка номенклатуры по каждой позиции в документе
	
	МассивОбработанныхДублей = Новый Массив;
	МассивОбработанныхСтрокДокумент  = Новый Массив;
	МассивОбработанныхСтрокЭксель = Новый Массив;
	
	//Корректная номенклатура - если нет дублей в ТЧ документа
	//Опасная номенклатура - если есть дубли в ТЧ, обработка для коррекции возможных ошибок
	
	//Обработка заполнения массива остатков ТЧ документа по уникальным позициям номенклатуры для сравнения с выгрузкой
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		Если МассивОбработанныхСтрокДокумент.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			Если МассивДублированнойНоменклатурыДокумент.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
				//Кейс для обработки корректной номенклатуры
				МассивСтруктурОстатковНоменклатурыДокумент.Добавить(Новый Структура("Гуид, Количество", Строка(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()), СтрокаТЧ.КоличествоУпаковок));
			Иначе
				//Кейс для обработки опасной номенклатуры
				Если МассивОбработанныхДублей.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
					ОстатокДублированнойНоменклатуры = 0;
					ГуидДублированнойНоменклатуры = null;
					//Поиск и суммирование остатков всех дублей опасной номенклатуры
					Для Каждого СтрокаТЧДубль Из ОбъектДокументВводОстатков.Товары Цикл
						Если СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор() = СтрокаТЧ.Номенклатура.УникальныйИдентификатор() Тогда
							ГуидДублированнойНоменклатуры = СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор();
							ОстатокДублированнойНоменклатуры = ОстатокДублированнойНоменклатуры + СтрокаТЧДубль.КоличествоУпаковок;
						КонецЕсли;
					КонецЦикла;
					МассивСтруктурОстатковНоменклатурыДокумент.Добавить(Новый Структура("Гуид, Количество", Строка(ГуидДублированнойНоменклатуры), ОстатокДублированнойНоменклатуры));
					МассивОбработанныхДублей.Добавить(СтрокаТЧДубль.Номенклатура.УникальныйИдентификатор());
				КонецЕсли;
			КонецЕсли;
			МассивОбработанныхСтрокДокумент.Добавить(СтрокаТЧ.Номенклатура.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	//Обработка заполнения массива остатков выгрузки по уникальным позициям номенклатуры для сравнения с ТЧ документа
	Для Каждого СтрокаЭксель Из ТаблицаЗначенийИзБП Цикл
		Если МассивОбработанныхСтрокЭксель.Найти(СтрЗаменить(СтрокаЭксель.Гуид, """", "")) = Неопределено Тогда
			ОстатокДублированнойНоменклатуры4101 = 0;
			ОстатокДублированнойНоменклатурыГТД  = 0;
			ГуидДублированнойНоменклатуры = null;
			Для Каждого СтрокаЭксельДубль Из ТаблицаЗначенийИзБП Цикл
				Если СтрЗаменить(СтрокаЭксель.Гуид, """", "") = СтрЗаменить(СтрокаЭксельДубль.Гуид, """", "") Тогда
					ОстатокДублированнойНоменклатуры4101 = СтрокаЭксельДубль.Остаток4101;
					ОстатокДублированнойНоменклатурыГТД = Число(ОстатокДублированнойНоменклатурыГТД) + ?(СтрокаЭксельДубль.ОстатокГТД = "", 0, СтрокаЭксельДубль.ОстатокГТД);
					ГуидДублированнойНоменклатуры = СтрЗаменить(СтрокаЭксельДубль.Гуид, """", "");
				КонецЕсли;
			КонецЦикла;
			МассивСтруктурОстатковНоменклатурыЭксель.Добавить(Новый Структура("Гуид, Количество4101, КоличествоГТД", ГуидДублированнойНоменклатуры, ОстатокДублированнойНоменклатуры4101, ОстатокДублированнойНоменклатурыГТД));
			МассивОбработанныхСтрокЭксель.Добавить(СтрЗаменить(СтрокаЭксель.Гуид, """", ""));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтруктураОстатковЭксель Из МассивСтруктурОстатковНоменклатурыЭксель Цикл
		Для Каждого СтруктураОстатковДокумент Из МассивСтруктурОстатковНоменклатурыДокумент Цикл
			Если СтруктураОстатковЭксель.Гуид = СтруктураОстатковДокумент.Гуид Тогда
				Если СтруктураОстатковЭксель.КоличествоГТД = СтруктураОстатковДокумент.Количество Тогда
					МассивСтруктурБезошибочнойНоменклатуры.Добавить(Новый Структура("Гуид, ВидОстатков, ОстатокДокумент, Остаток4101, ОстатокГТД",
					Строка(СтруктураОстатковЭксель.Гуид), "ГТД", СтруктураОстатковДокумент.Количество, СтруктураОстатковЭксель.Количество4101, СтруктураОстатковЭксель.КоличествоГТД));	
				ИначеЕсли СтруктураОстатковЭксель.Количество4101 = СтруктураОстатковДокумент.Количество Тогда
					МассивСтруктурБезошибочнойНоменклатуры.Добавить(Новый Структура("Гуид, ВидОстатков, ОстатокДокумент, Остаток4101, ОстатокГТД",
					Строка(СтруктураОстатковЭксель.Гуид), "4101", СтруктураОстатковДокумент.Количество, СтруктураОстатковЭксель.Количество4101, СтруктураОстатковЭксель.КоличествоГТД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СошлисьОстатки = МассивСтруктурБезошибочнойНоменклатуры.Количество();

	
	Если КоличествоРазличнойНоменклатурыВЭксель = СошлисьОстатки Тогда
		СтатусСхожденияОстатков = "Остатки по выделенным позициям сошлись.";
	Иначе
		СтатусСхожденияОстатков = "Остатки не сошлись. Возможны ошибки.";
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьСхождениеОстатков(Команда)
	ПроверитьСхождениеОстатковНаСервере();
КонецПроцедуры

&НаСервере
Процедура УбратьГалочкуГТДНаСервере(ДокументНачальныхОстатков)
	ОбъектДокументВводОстатков = ДокументНачальныхОстатков.ПолучитьОбъект();
	СообщениеОбОбработке = Новый СообщениеПользователю;
	
	КорректнаяНоменклатура = Новый Массив;
	ОшибочнаяНоменклатура = Новый Массив;
	
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		Если СтрокаТЧ.КоличествоУпаковок = 0 И СтрокаТЧ.НомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
			СообщениеОбОбработке.Текст = "ВНИМАНИЕ! При обработке номенклатуры: "  + СтрокаТЧ.Номенклатура.НаименованиеПолное + " " + СтрокаТЧ.Номенклатура.Код + " на строке " + СтрокаТЧ.НомерСтроки + " произошла ошибка. Пожалуйста, обработайте эту строку вручную.";
			СообщениеОбОбработке.Сообщить();
			ОшибочнаяНоменклатура.Добавить(СтрокаТЧ.Номенклатура.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ОбъектДокументВводОстатков.Товары Цикл
		Если СтрокаТЧ.НомерГТД = Справочники.НомераГТД.ПустаяСсылка() И ОшибочнаяНоменклатура.Найти(СтрокаТЧ.Номенклатура.УникальныйИдентификатор()) = Неопределено Тогда
			ОбъектНоменклатура = СтрокаТЧ.Номенклатура.ПолучитьОбъект();
			ОбъектНоменклатура.ВестиУчетПоГТД = Ложь;
			ОбъектНоменклатура.Записать();
			СообщениеОбОбработке.Текст = "Номенклатура " + СтрокаТЧ.Номенклатура.НаименованиеПолное + " " + СтрокаТЧ.Номенклатура.Код + " была обработана. Учет ГТД снят.";
			СообщениеОбОбработке.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьГалочкуГТД(Команда)
	УбратьГалочкуГТДНаСервере(ДокументНачальныхОстатков);
КонецПроцедуры
